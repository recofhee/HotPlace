package com.HotPlace.controller;

import java.io.IOException;
import java.util.Date;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;

import com.HotPlace.dao.MemberDao;
import com.HotPlace.vo.MemberVo;

@WebServlet("/RandomPassword")
public class RandomPasswordServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.getRequestDispatcher("RandomPassword.jsp").forward(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		
		String url = "";
		String email = req.getParameter("email");
		String sendAuth = req.getParameter("sendAuth");
		System.out.println("sendAuth 값 : " + sendAuth);

		MemberVo mvo = new MemberVo();
		mvo.setEmail(email);
		
		MemberDao dao = MemberDao.getInstance();
		
		int result = dao.findPass(email);
		
		HttpSession session = req.getSession();
		
		if(result == 1) {
			String pw = sendMail(email);
			dao.setPass(email, pw);
			
			session.setAttribute("email", mvo.getEmail());
			req.setAttribute("message", "email 정보를 찾았습니다.");
			session.setAttribute("sendAuth", sendAuth);
			
			url = "RandomPassword2.jsp";
		} else  {
			req.setAttribute("message", "일치하는 정보가 없습니다.");
			url = "RandomPassword2.jsp";
		}
		
		RequestDispatcher dispatcher = req.getRequestDispatcher(url);
		dispatcher.forward(req, resp);
	}
	
	public String sendMail(String email) {
	
		Properties props = System.getProperties();
		props.put("mail.smtp.user", "rodjfuqek1");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "465");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		props.put("mail.smtp.socketFactory.fallback", "false");
		
		Authenticator auth = new MyAuthentication();
		
		//session 생성
		Session session = Session.getDefaultInstance(props, auth);
		MimeMessage msg = new MimeMessage(session);
		JSONObject object = new JSONObject();
		String codeCheck = null;
		try {
			// 편지 보낸 시간
			msg.setSentDate(new Date());
			
			//InternetAddress from = new InternetAddress("rodjfuqek1@gmail.com");
			
			
			// 이메일 발신자
			msg.setFrom(new InternetAddress("rodjfuqek1@gmail.com", "핫플레이스"));
			
			
			// 이메일 수신자
			InternetAddress to = new InternetAddress(email);
			msg.setRecipient(Message.RecipientType.TO, to);
			
			// 이메일 제목
			msg.setSubject("[핫플레이스] 임시비밀번호 입니다.", "UTF-8");
			
			
			// 이메일 내용
			codeCheck = RandomPassword.randomPw();
			//msg.setText("임시비밀번호 : " + codeCheck, "UTF-8");
			msg.setText(
					"<html>\r\n" + 
					"<head>\r\n" + 
					"<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n" + 
					"<title>email test</title>\r\n" + 
					"</head>\r\n" + 
					"<body>\r\n" + 
					"<div style=\"box-shadow:5px 5px 15px gray; width: 800px;\">\r\n" + 
					"<div style=\"border: 0px solid gray; vertical-align: middle; margin: 0 auto; text-align: center; padding: 40px; \">\r\n" + 
					"		<div style=\"border-bottom: 1px solid lightgray; font-size: 20px; line-height: 3em; font-weight: bold; \">핫플레이스 임시 비밀번호 안내</div>\r\n" + 
					"		<div style=\"line-height: 3em;\">비밀번호를 잃어버리셨나봐요!</div>\r\n" + 
					"		<div style=\"line-height: 3em;\">회원가입시 입력한 이메일로 임시비밀번호를 보내드립니다.</div>\r\n" + 
					"		<div style=\"line-height: 3em;\">로그인 이후에는 꼭 비밀번호 변경을 해주시기 바라겠습니다.</div>\r\n" + 
					"		<div style=\"line-height: 3em;\">감사합니다 ^^</div>\r\n" + 
					"		<div style=\"line-height: 3em;\">코드 번호 : <strong style=\"line-height: 3em; font-size: 25px;  \">"+codeCheck+"</strong></div>\r\n" + 
					"		<div style=\"line-height: 3em; text-align: center; \"><a href=\"https://a519486.com/Login\" style=\"text-decoration: none;font-weight: bold; font-size: 16px; color: #df3b20;\">로그인하러 가기 GO!</a></div>\r\n" + 
					"		<div style=\"line-height: 3em; text-align: center;\"><img src=\"https://a519486.com/images/icon/HotPlace.png\" style=\"width: 40px\"></div>\r\n" + 
					"</div>\r\n" + 
					"</div>\r\n" + 
					"</body>\r\n" + 
					"</html>"
					, "UTF-8");
			
			
			
			// 이메일 헤더
			msg.setHeader("content-Type", "text/html");
			
			
			// 메일 보내기
			javax.mail.Transport.send(msg);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return codeCheck;
	}
	
	class MyAuthentication extends Authenticator {
		
		PasswordAuthentication pa;
		
		public MyAuthentication() {
			String id = "rodjfuqek1";
			String pw = "dmfktckck!1";
			
			pa = new PasswordAuthentication(id,	pw);
		}
		
		public PasswordAuthentication getPasswordAuthentication() {
			return pa;
		}
	}

}
