package com.HotPlace.controller;

import java.io.IOException;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;

// 제휴문의 이메일 전송 서블릿

@WebServlet("/ContactMailing")
public class ContactMailing extends HttpServlet{

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		Properties props = System.getProperties();
		props.put("mail.smtp.user", "rodjfuqek1");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "465");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		props.put("mail.smtp.socketFactory.fallback", "false");
		
		String company = req.getParameter("company");
		String name = req.getParameter("name");
		String tel = req.getParameter("tel");
		String email = req.getParameter("email");
		String content = req.getParameter("content");
		String from = "rodjfuqek1@gmail.com";
		String to = "rodjfuqek1@gmail.com";
		
		
		Authenticator auth = new MyAuthentication();
		
		//session 생성
		Session session = Session.getDefaultInstance(props, auth);
		MimeMessage msg = new MimeMessage(session);
		JSONObject object = new JSONObject();
		
		try {
			StringBuffer buffer = new StringBuffer();
			buffer.append(" 업체명 : ");
			buffer.append(company + "<br>");
			buffer.append(" 이름 : ");
			buffer.append(name + "<br>");
			buffer.append(" 번호 : ");
			buffer.append(tel + "<br>");
			buffer.append(" 이메일 : ");
			buffer.append(email + "<br>");
			buffer.append(" 문의 내용 : ");
			buffer.append(content + "<br>");
			
			
			javax.mail.Address fromAddr = new InternetAddress(from);
			msg.setFrom(fromAddr);
			
			javax.mail.Address toAddr = new InternetAddress(to);
			msg.addRecipient(Message.RecipientType.TO, toAddr);
			
			msg.setSubject("[핫플레이스] 제휴 문의가 도착했습니다.", "UTF-8");
			
			msg.setContent(buffer.toString(), "text/html; charset=UTF-8");
			Transport.send(msg);
			
			
			
			session.setDebug(true);
		} catch(Exception e) {
			e.printStackTrace();
			return;
		} 
		
		
	}
	
class MyAuthentication extends Authenticator {
		
		PasswordAuthentication pa;
		
		public MyAuthentication() {
			String id = "rodjfuqek1";
			String pw = "dmfktckck!1";
			
			pa = new PasswordAuthentication(id,	pw);
		}
		
		public PasswordAuthentication getPasswordAuthentication() {
			return pa;
		}
	}
}
